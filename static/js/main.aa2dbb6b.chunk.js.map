{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handleNextImage","step","props","images","frameSize","infinite","newPosition","maxPosition","length","setState","handlePrevImage","this","itemWidth","animationDuration","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","disabled","Component","App","htmlFor","id","min","max","value","onChange","e","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa2dbb6b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0,\n  };\n\n  handleNextImage = (step: number): void => {\n    const { position } = this.state;\n    const { images, frameSize, infinite } = this.props;\n\n    const newPosition = position - step;\n    const maxPosition = images.length - frameSize;\n\n    if (position === -maxPosition && infinite) {\n      this.setState({ position: 0 });\n\n      return;\n    }\n\n    if (-newPosition > maxPosition) {\n      this.setState({ position: -maxPosition });\n    } else {\n      this.setState({ position: newPosition });\n    }\n  };\n\n  handlePrevImage = (step: number): void => {\n    const { position } = this.state;\n    const { images, frameSize, infinite } = this.props;\n\n    const newPosition = position + step;\n    const maxPosition = images.length - frameSize;\n\n    if (position === 0 && infinite) {\n      this.setState({ position: -maxPosition });\n\n      return;\n    }\n\n    if (newPosition > 0) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState({ position: newPosition });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n            transition: `width ${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                transition: `transform ${animationDuration}ms`,\n                transform: `translateX(${position * itemWidth}px)`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${index}`}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          data-cy=\"prev\"\n          onClick={() => this.handlePrevImage(step)}\n          disabled={position >= 0 && !infinite}\n        >\n          &#8249;\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => this.handleNextImage(step)}\n          disabled={-position >= images.length - frameSize && !infinite}\n        >\n          &#8250;\n        </button>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"App__field\">\n          <label htmlFor=\"step\">\n            Step:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"step\"\n            min=\"1\"\n            max={images.length}\n            value={step}\n            onChange={(e) => this.setState({\n              step: +e.target.value,\n            })}\n          />\n\n          <label htmlFor=\"frameSize\">\n            Frame size:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            min=\"1\"\n            max={images.length}\n            value={frameSize}\n            onChange={(e) => this.setState({\n              frameSize: +e.target.value,\n            })}\n          />\n\n          <label htmlFor=\"itemWidth\">\n            Item width:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"itemWidth\"\n            min=\"100\"\n            max=\"200\"\n            value={itemWidth}\n            onChange={(e) => this.setState({\n              itemWidth: +e.target.value,\n            })}\n          />\n\n          <label htmlFor=\"animationDuration\">\n            Animation duration:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            value={animationDuration}\n            onChange={(e) => this.setState({\n              animationDuration: +e.target.value,\n            })}\n          />\n\n          <label htmlFor=\"infinite\">\n            Infinite:\n          </label>\n\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            checked={infinite}\n            onChange={(e) => this.setState({\n              infinite: e.target.checked,\n            })}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}